package com.mms.users;

import com.mms.MMS;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

public class LoginDialog extends javax.swing.JDialog {

    private final ImageIcon toolbox = new ImageIcon(MMS.class.getResource("/toolbox.png"));
    private boolean success = false;
    
    /**
     * Creates new form LoginDialog
     */
    public LoginDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setIconImage(MMS.systemIcon.getImage());
        setLocationRelativeTo(parent);
        passwordField.putClientProperty("JTextField.placeholderText", "Password");
        
        //Set combo box users
        userCombo.removeAllItems();
        for(int i = 0; i < MMS.getUsers().size(); i++){
            String user = MMS.getUsers().get(i);
            if(user.contains("*")) user = user.substring(0, user.indexOf("*")-1);
            userCombo.addItem(user);
        }
        
        //Select default user
        String u = MMS.getPrefs().get("defaultUser", "");
        if(!u.isEmpty()){
            userCombo.setSelectedItem(u);
            passwordField.requestFocus();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backPanel = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        separator = new javax.swing.JSeparator();
        userCombo = new javax.swing.JComboBox<>();
        passwordField = new javax.swing.JPasswordField();
        continueButton = new javax.swing.JButton();
        failedLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Login");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        logoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbox.png"))); // NOI18N
        logoLabel.setToolTipText("Click me!");
        logoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoLabelMouseClicked(evt);
            }
        });

        separator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        userCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        userCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userComboKeyPressed(evt);
            }
        });

        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userComboKeyPressed(evt);
            }
        });

        continueButton.setText("Continue");
        continueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueButtonActionPerformed(evt);
            }
        });

        failedLabel.setForeground(new java.awt.Color(255, 0, 0));
        failedLabel.setText(" ");

        javax.swing.GroupLayout backPanelLayout = new javax.swing.GroupLayout(backPanel);
        backPanel.setLayout(backPanelLayout);
        backPanelLayout.setHorizontalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backPanelLayout.createSequentialGroup()
                .addComponent(logoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(userCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordField)
                    .addGroup(backPanelLayout.createSequentialGroup()
                        .addComponent(failedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(continueButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        backPanelLayout.setVerticalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(logoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(separator)
                        .addGroup(backPanelLayout.createSequentialGroup()
                            .addComponent(userCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(continueButton)
                                .addComponent(failedLabel)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if(!success) MMS.shutdown();
    }//GEN-LAST:event_formWindowClosed

    private void continueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueButtonActionPerformed
        String u = userCombo.getSelectedItem().toString(), p = passwordField.getText();
        if(p.isEmpty()) passwordField.requestFocus();
        else{
            String password = "", salt = "";
            try {
                ResultSet rs = MMS.select("SELECT Password, Salt FROM Users WHERE Username = ?",
                        new Object[]{u});
                if(rs.next()){
                    password = rs.getObject(1).toString().trim();
                    salt = rs.getObject(2).toString().trim();
                }
                else fail();             
            } catch (SQLException ex) {
                Logger.getLogger(LoginDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            //Get hash
            p = Hasher.getHash(p, salt);

            if(p.contentEquals(password)){
                success = true;
                MMS.setUser(u);
                //Set user to logged in
                MMS.executeQuery("UPDATE Users SET Logged = 'Y' WHERE Username = ?",
                        new Object[]{u});
                
                //Put user in preferences
                MMS.getPrefs().put("defaultUser", u);
                
                dispose();//LOGIN SUCCESSFUL
            }
            else fail();
        }
    }//GEN-LAST:event_continueButtonActionPerformed

    private void userComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userComboKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            continueButtonActionPerformed(null);
        }
    }//GEN-LAST:event_userComboKeyPressed

    private void logoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoLabelMouseClicked
        new Thread(){
            @Override
            public void run(){
                for(int i = 2; i <= 360; i += 2){
                    logoLabel.setIcon(new RotatedIcon(toolbox, i));
                    try {
                        Thread.sleep(2);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(LoginDialog.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }               
            }
        }.start();
    }//GEN-LAST:event_logoLabelMouseClicked

    private void fail(){
        failedLabel.setText("Login failed!");
        passwordField.requestFocus();
        passwordField.selectAll();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backPanel;
    private javax.swing.JButton continueButton;
    private javax.swing.JLabel failedLabel;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JSeparator separator;
    private javax.swing.JComboBox<String> userCombo;
    // End of variables declaration//GEN-END:variables
}
